#!/bin/bash -e
# shellcheck disable=SC2039,SC1090

SCRIPTNAME=$(basename "$0")

# Services managed by the script (in alphabetical order)
SERVICES="esm fips livepatch"

# system details
SERIES=${SERIES:-$(lsb_release -cs)}
KERNEL_VERSION=${KERNEL_VERSION:-$(uname -r)}
ARCH=${ARCH:-$(uname -m)}
# system files
FSTAB=${FSTAB:-"/etc/fstab"}
CPUINFO=${CPUINFO:-"/proc/cpuinfo"}
KEYRINGS_DIR=${KEYRINGS_DIR:-"/usr/share/keyrings"}
APT_AUTH_FILE=${APT_AUTH_FILE:-"/etc/apt/auth.conf"}
APT_KEYS_DIR=${APT_KEYS_DIR:-"/etc/apt/trusted.gpg.d"}
APT_METHOD_HTTPS=${APT_METHOD_HTTPS:-"/usr/lib/apt/methods/https"}
CA_CERTIFICATES=${CA_CERTIFICATES:-"/usr/sbin/update-ca-certificates"}
# system binaries
SNAPD=${SNAPD:-"/usr/lib/snapd/snapd"}
APT_HELPER=${APT_HELPER:-"/usr/lib/apt/apt-helper"}

load_modules() {
    local script_dir modules_dir
    script_dir=$(dirname "$0")
    if [ "$script_dir" = "/usr/bin" ]; then
        modules_dir="/usr/share/ubuntu-advantage-tools/modules"
    else
        modules_dir="${script_dir}/modules"
    fi

    local module
    for module in "$modules_dir"/*.sh; do
        . "$module"
    done
}

print_status() {
    local service="$1"

    local services="$SERVICES"
    if [ "$service" ]; then
        name_in_list "$service" "$SERVICES" || error_exit invalid_command
        services="$service"
    fi

    for service in $services; do
        service_print_status "$service"
    done
}

usage() {
    cat >&2 <<EOF
usage: ${SCRIPTNAME} <command> [parameters]

This is a tool that facilitates access to some of Canonical's
Ubuntu Advantage offerings.

Currently available are:
- Ubuntu Extended Security Maintenance archive (https://ubuntu.com/esm)
- Canonical FIPS 140-2 Certified Modules
- Canonical Livepatch Service (https://www.ubuntu.com/server/livepatch)

Commands:
 version                   show the tool version
 status [NAME]             show current status of Ubuntu Advantage offerings
                           (or of a specific one if provided)
 enable-esm <TOKEN>        enable the ESM repository
 disable-esm               disable the ESM repository
 enable-fips <TOKEN>       enable the FIPS PPA repository and install,
                           configure and enable FIPS certified modules
 disabe-fips               currently not supported
 enable-livepatch <TOKEN>  enable the Livepatch service
 disable-livepatch [-r]    disable the Livepatch service. With "-r", the
                           canonical-livepatch snap will also be removed
 update-fips <token> [-y]  Install and enable updated non-certified FIPS
                           modules. With "-y" or "--yes" the user prompt
                           will be bypassed.
EOF
    error_exit invalid_command
}

main() {
    local command="$1"
    shift 1 || true

    local service
    service=$(service_from_command "$command")
    # if the command contains a service name, check that it's valid
    if [ "$service" ] && ! name_in_list "$service" "$SERVICES"; then
        error_msg "Invalid command: \"$command\""
        usage
    fi

    case "$command" in
        status)
            print_status "$@"
            ;;

        version)
            package_version ubuntu-advantage-tools
            ;;

        enable-*)
            service_enable "$service" "$@"
            ;;

        disable-*)
            service_disable "$service" "$@"
            ;;

        update-*)
            local token="$1"
            local bypass_prompt=0
            while true ; do
               case "$2" in
                  --yes | -y)
                     bypass_prompt=1
                     break;
                     ;;
                  *)
                     break;
                     ;;
               esac
            done;
            service_update "$service" "$token" "$bypass_prompt"
            ;;

        is-*-enabled)
            service_is_enabled "$service"
            ;;

        *)
            error_msg "Invalid command: \"$command\""
            usage
            ;;
    esac
}


if ! echo "$PATH" | grep -qE "(^|:)/snap/bin/?(:|$)"; then
    PATH="/snap/bin:$PATH"
fi

load_modules
main "$@"
